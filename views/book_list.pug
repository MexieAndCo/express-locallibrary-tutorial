//- /views/book_list.pug
//- 2021-07-18 10:33
//- See https://developer.mozilla.org/en-US/docs/Learn/Server-side/Express_Nodejs/Displaying_data/Book_list_page
//-
  The view extends the layout.pug base template and overrides the block  
  named 'content'. The book_list is first sorted alphabetically with the 
  inline JavaScript array.sort() function. It then displays the title we 
  passed in from the controller (via the render() method) and iterates 
  through the book_list variable using the each-in-else syntax. A list 
  The view extends the layout.pug base template and overrides the block 
  item is created for each book displaying the book title as a link to 
  the book's detail page followed by the author name. If there are no 
  books in the book_list then the else clause is executed, and displays 
  the text 'There are no books.'

  Note: We use book.url to provide the link to the detail record for each 
  book (we've implemented this route, but not the page yet). This is a 
  virtual property of the Book model which uses the model instance's _id 
  field to produce a unique URL path.

  Of interest here is that each book is defined as two lines, using the 
  pipe for the second line. This approach is needed because if the author 
  name were on the previous line then it would be part of the hyperlink.

  From the PUG doc:
  Another way to add plain text to templates is to prefix a line with a 
  pipe character (|). This method is useful for mixing plain text with 
  inline tags, as we discuss later, in the Whitespace Control section.

extends layout

block content
  h2= title

  ul
    - book_list.sort(function(a, b) {let textA = a.title.toUpperCase(); let textB = b.title.toUpperCase(); return (textA < textB) ? -1 : (textA > textB) ? 1 : 0;});
    each book in book_list
      li
        a(href=book.url) #{book.title}
        |  (#{book.author.name})
    else
      li There are no books.